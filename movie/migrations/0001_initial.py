# Generated by Django 4.1.6 on 2023-02-08 11:42

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("create_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("title", models.CharField(max_length=50)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("create_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                (
                    "types",
                    models.CharField(
                        choices=[("DR", "Director"), ("WR", "Writer"), ("AC", "Actor")],
                        default="AC",
                        max_length=2,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("create_at", models.DateField(auto_now_add=True)),
                ("updated_at", models.DateField(auto_now=True)),
                ("title", models.CharField(max_length=50)),
                ("description", models.TextField()),
                ("poster", models.ImageField(upload_to="poster")),
                ("bg_picture", models.ImageField(upload_to="big_picture")),
                (
                    "release_year",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1200),
                            django.core.validators.MaxValueValidator(2023),
                        ]
                    ),
                ),
                (
                    "mpa_rating",
                    models.CharField(
                        choices=[
                            ("G", "General Audiences"),
                            ("PG", "Parental Guidance Suggested"),
                            ("R", "Restricted"),
                            ("NC-17", "Adults Only"),
                        ],
                        default="",
                        max_length=5,
                    ),
                ),
                (
                    "imdb_rating",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0.01),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "duration",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0.01)]
                    ),
                ),
                (
                    "directors",
                    models.ManyToManyField(related_name="directors", to="movie.person"),
                ),
                ("genres", models.ManyToManyField(to="movie.genre")),
                (
                    "stars",
                    models.ManyToManyField(related_name="stars", to="movie.person"),
                ),
                (
                    "writers",
                    models.ManyToManyField(related_name="writers", to="movie.person"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
